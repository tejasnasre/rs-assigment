{
  "id": "2ca736ef-5ed1-462f-815a-65d1d44dbef0",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.store_ratings": {
      "name": "store_ratings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "store_id": {
          "name": "store_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "review": {
          "name": "review",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "store_ratings_created_at_idx": {
          "name": "store_ratings_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "store_ratings_rating_idx": {
          "name": "store_ratings_rating_idx",
          "columns": [
            {
              "expression": "rating",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "store_ratings_store_id_idx": {
          "name": "store_ratings_store_id_idx",
          "columns": [
            {
              "expression": "store_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "store_ratings_user_id_idx": {
          "name": "store_ratings_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "store_ratings_store_id_stores_id_fk": {
          "name": "store_ratings_store_id_stores_id_fk",
          "tableFrom": "store_ratings",
          "tableTo": "stores",
          "columnsFrom": [
            "store_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "store_ratings_user_id_users_id_fk": {
          "name": "store_ratings_user_id_users_id_fk",
          "tableFrom": "store_ratings",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_user_store_rating": {
          "name": "unique_user_store_rating",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "store_id"
          ]
        }
      },
      "policies": {
        "Users can see all store ratings": {
          "name": "Users can see all store ratings",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Users can create ratings for stores": {
          "name": "Users can create ratings for stores",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can update their own ratings": {
          "name": "Users can update their own ratings",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can delete their own ratings": {
          "name": "Users can delete their own ratings",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Store owners can see ratings for their stores": {
          "name": "Store owners can see ratings for their stores",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update any rating": {
          "name": "Admins can update any rating",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Admins can delete any rating": {
          "name": "Admins can delete any rating",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.stores": {
      "name": "stores",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "varchar(400)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "average_rating": {
          "name": "average_rating",
          "type": "numeric(2, 1)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.0'"
        },
        "total_ratings": {
          "name": "total_ratings",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "stores_active_idx": {
          "name": "stores_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "stores_address_idx": {
          "name": "stores_address_idx",
          "columns": [
            {
              "expression": "address",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "stores_email_idx": {
          "name": "stores_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "stores_name_idx": {
          "name": "stores_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "stores_owner_id_idx": {
          "name": "stores_owner_id_idx",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "stores_rating_idx": {
          "name": "stores_rating_idx",
          "columns": [
            {
              "expression": "average_rating",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "numeric_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "stores_owner_id_users_id_fk": {
          "name": "stores_owner_id_users_id_fk",
          "tableFrom": "stores",
          "tableTo": "users",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "stores_email_unique": {
          "name": "stores_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "Anyone can view active stores": {
          "name": "Anyone can view active stores",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(is_active = true)"
        },
        "Store owners can view their own stores": {
          "name": "Store owners can view their own stores",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Store owners can update their own stores": {
          "name": "Store owners can update their own stores",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Store owners can delete their own stores": {
          "name": "Store owners can delete their own stores",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Admins can view all stores": {
          "name": "Admins can view all stores",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update all stores": {
          "name": "Admins can update all stores",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Admins can delete any store": {
          "name": "Admins can delete any store",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Only store owners and admins can create stores": {
          "name": "Only store owners and admins can create stores",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(60)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "password": {
          "name": "password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "varchar(400)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'normal_user'"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "email_verification_token": {
          "name": "email_verification_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_verification_expiry": {
          "name": "email_verification_expiry",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "password_reset_token": {
          "name": "password_reset_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "password_reset_expiry": {
          "name": "password_reset_expiry",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "last_login": {
          "name": "last_login",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "login_attempts": {
          "name": "login_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "locked_until": {
          "name": "locked_until",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "users_active_idx": {
          "name": "users_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_idx": {
          "name": "users_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_name_idx": {
          "name": "users_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_role_idx": {
          "name": "users_role_idx",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(id = (current_setting('app.current_user_id'::text, true))::uuid)"
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Admins can view all profiles": {
          "name": "Admins can view all profiles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update all profiles": {
          "name": "Admins can update all profiles",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Admins can delete users": {
          "name": "Admins can delete users",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": [
        "system_administrator",
        "normal_user",
        "store_owner"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}